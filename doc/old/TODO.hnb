<?xml version="1.0" encoding="ISO-8859-1"?><?pos="0"?>
<!-- generated by hnb 1.9.17 (http://hnb.sourceforge.net) -->

<!DOCTYPE tree[
	<!ELEMENT tree (node*)>
	<!ELEMENT data (#PCDATA)> <!-- (max 4096 bytes long) -->
	<!ELEMENT node (data?,node*)>
	<!ATTLIST node done (yes|no) #IMPLIED
	          type CDATA #IMPLIED
	>]>

<tree>
<node done="no" type="todo" priority="1"><data>Stuff for 0.2.1</data>
	<node><data>(See items in main list for details)</data></node>
	<node done="yes" type="todo" priority="1"><data>Merge new build system</data></node>
	<node done="no" type="todo" priority="1"><data>Fix any breakage resulting from merging new build system</data></node>
	<node done="no" type="todo" priority="2"><data>Finish AI plugin backend</data>
		<node><data>Means we can ship with some AI using the plugin interface. This AI can be coded in straight C++ if need be.</data></node>
	</node>
	<node done="no" type="todo" priority="3"><data>As many of the fixes (see that section) as possible</data></node>
	<node done="no" type="todo" priority="3"><data>Refactor the animation code (see that section)</data></node>
</node>
<node done="no" type="todo"><data>Path finder</data>
	<node done="no" type="todo"><data>General code cleanup.</data></node>
	<node done="no" type="todo"><data>Fix fib heap.</data></node>
	<node done="no" type="todo"><data>Merge path finder with fib heap.</data></node>
	<node done="no" type="todo"><data>Time new pathfinder.</data></node>
</node>
<node done="no" type="todo"><data>Animation design</data>
	<node done="no" type="todo"><data>Clean up draft implementation.</data></node>
	<node done="no" type="todo"><data>Solve sync problem.</data></node>
	<node done="no" type="todo"><data>Implement.</data></node>
</node>
<node done="no" type="todo"><data>AI plugins</data>
	<node done="no" type="todo"><data>Finish implementing core side interface.</data>
		<node><data>Mostly needs the build queue to be done.</data></node>
	</node>
	<node done="no" type="todo"><data>Finish implementing Lua LSP.</data></node>
	<node done="no" type="todo"><data>Write FreeCNC perl module.</data></node>
	<node done="no" type="todo"><data>Write Perl LSP with automatic jailing inside Safe.</data></node>
	<node done="no" type="todo"><data>Abstract architecture to allow scripts to be used in other parts of the game.</data></node>
</node>
<node done="no" type="todo"><data>Client/Server split</data>
	<node done="no" type="todo"><data>Inspect tree to get a list of functions to go on either side of the split.</data></node>
	<node done="no" type="todo"><data>Make the split (during tree restructuring).</data></node>
	<node done="no" type="todo"><data>Update AI plugin interface to make the AI scripts clients.</data></node>
</node>
<node done="no" type="todo"><data>New tree layout</data>
	<node done="no" type="todo"><data>base</data>
		<node><data>Contains VFS, DLLibrary, Logger</data></node>
	</node>
	<node done="no" type="todo"><data>plugins</data>
		<node done="no" type="todo"><data>media</data>
			<node done="no" type="todo"><data>sound</data>
				<node done="no" type="todo"><data>AUD/WSADPCM</data></node>
				<node done="no" type="todo"><data>Ogg</data></node>
				<node done="no" type="todo"><data>modplug</data></node>
				<node done="no" type="todo"><data>Generic XMMS input plugin support</data></node>
			</node>
			<node done="no" type="todo"><data>sprites</data>
				<node done="no" type="todo"><data>WSS (SHP, Template, Dune2)</data></node>
				<node done="no" type="todo"><data>PNG/MNG</data></node>
			</node>
			<node done="no" type="todo"><data>video</data>
				<node done="no" type="todo"><data>vqa</data></node>
				<node done="no" type="todo"><data>wsa</data></node>
				<node done="no" type="todo"><data>vp3/theora</data></node>
			</node>
			<node done="no" type="todo"><data>font</data>
				<node done="no" type="todo"><data>Westwood&apos;s font format</data></node>
				<node done="no" type="todo"><data>Char matrix</data></node>
				<node done="no" type="todo"><data>Freetype</data></node>
			</node>
		</node>
		<node done="no" type="todo"><data>map</data>
			<node done="no" type="todo"><data>INI/BIN</data></node>
			<node done="no" type="todo"><data>Our own format</data></node>
		</node>
		<node done="no" type="todo"><data>scripting</data>
			<node done="no" type="todo"><data>base class</data></node>
			<node done="no" type="todo"><data>lua</data></node>
			<node done="no" type="todo"><data>perl</data></node>
			<node done="no" type="todo"><data>python</data></node>
		</node>
		<node done="no" type="todo"><data>vfs</data>
			<node done="no" type="todo"><data>mix</data></node>
			<node done="no" type="todo"><data>tgz</data></node>
			<node done="no" type="todo"><data>zip</data></node>
		</node>
	</node>
	<node done="no" type="todo"><data>utils</data>
		<node done="no" type="todo"><data>mixshell</data></node>
		<node done="no" type="todo"><data>spriteview (new version of shpview)</data></node>
		<node done="no" type="todo"><data>xmms-aud</data></node>
		<node done="no" type="todo"><data>map editor</data></node>
		<node done="no" type="todo"><data>tmpinied</data></node>
		<node done="no" type="todo"><data>launchers</data>
			<node done="no" type="todo"><data>tcl/tk</data></node>
			<node done="no" type="todo"><data>cocoa</data></node>
		</node>
	</node>
	<node done="no" type="todo"><data>freecnc</data>
		<node><data>Graphics engine</data></node>
		<node><data>Sound engine</data></node>
		<node><data>UI (might be seperate library)</data></node>
		<node><data>Glue code that ties all the plugins together</data></node>
	</node>
</node>
<node done="no" type="todo"><data>New formats</data>
	<node done="no" type="todo"><data>Map</data>
		<node><data>Easier to parse coordinates</data></node>
		<node><data>Ability to embed scripts as triggers</data></node>
		<node><data>Support for arbitrarily large maps</data></node>
	</node>
	<node done="no" type="todo"><data>Sprites</data>
		<node done="no" type="todo"><data>Either PNG with frames or MNG</data></node>
	</node>
	<node done="no" type="todo"><data>Audio</data>
		<node><data>Ogg</data></node>
	</node>
	<node done="no" type="todo"><data>Converters</data></node>
</node>
<node done="no" type="todo"><data>GUI toolkit</data>
	<node><data>Might use a cut down version of paragui</data></node>
</node>
<node done="no" type="todo"><data>Networking</data>
	<node done="no" type="todo"><data>Design protocol</data></node>
	<node done="no" type="todo"><data>Write networking layer</data></node>
	<node done="no" type="todo"><data>Protocol proxy</data></node>
	<node done="no" type="todo"><data>Live restart/upgrades</data></node>
</node>
<node><data>Fixes</data>
	<node><data>There are also some fixes listed under Red Alert support</data></node>
	<node done="no" type="todo"><data>Radar size, position and zoom are wrong.</data>
		<node><data>Zoom should be so that a larger area of the map can be seen.</data></node>
		<node><data>Position is completely broken (works some of the time though).</data></node>
		<node><data>Radar too large: no border between the game map and the radar.</data></node>
	</node>
	<node done="no" type="todo"><data>Warheads can have a blast radius larger than a cell.</data></node>
	<node done="no" type="todo"><data>Rewrite soundengine callback to avoid allocating memory (performance[?] and compat. reasons)</data></node>
	<node done="no" type="todo"><data>SoundCache, which stores uncompressed sounds like the ImageCache.</data>
		<node><data>Should avoid caching large files like music</data></node>
	</node>
	<node done="no" type="todo"><data>Finish implementing projectile code so all units can fire.</data>
		<node done="no" type="todo"><data>Handling projectiles that animate whilst moving</data></node>
	</node>
	<node done="no" type="todo"><data>Fix obelisks.</data></node>
	<node done="no" type="todo"><data>VFS not 64-bit clean (converts FILE* to Uint32).</data></node>
	<node done="no" type="todo"><data>No placement mat when placing on edge.</data></node>
	<node done="yes" type="todo"><data>Right-click scrolling cursor still inaccurate for one case (vel: -5, -5).</data></node>
	<node done="no" type="todo"><data>Reading entire inifiles up front isn&apos;t that efficient: change parser to load sections in on demand.</data></node>
	<node done="yes" type="todo"><data>Disable scrolling when cursor is in the region that contains the options and sidebar toggle tabs.</data></node>
</node>
<node done="no" type="todo"><data>Environment engine</data>
	<node done="no" type="todo"><data>Tiberium growth</data></node>
	<node done="no" type="todo"><data>Variable terrain</data>
		<node><data>e.g. destroyable/repairable bridges</data></node>
	</node>
	<node done="no" type="todo"><data>Rotting corpses</data></node>
</node>
<node done="no" type="todo"><data>Loading/Saving games</data>
	<node done="no" type="todo"><data>Serialising the game state</data>
		<node done="no" type="todo"><data>Contents of event queue.</data></node>
		<node done="no" type="todo"><data>Location and status of units and structures.</data></node>
		<node done="no" type="todo"><data>Store save game as a map. Only need to store the ini part. Store things as deltas to the original map: saves space and avoids problems with people distributing save games containing possibly copyrighted data.</data></node>
	</node>
	<node done="no" type="todo"><data>Restoring the game state</data>
		<node done="no" type="todo"><data>Whilst loading original map, apply deltas.</data></node>
		<node done="no" type="todo"><data>Restore contents of event queue.</data></node>
	</node>
</node>
<node done="no" type="todo"><data>Unit abilities</data>
	<node done="no" type="todo"><data>Harvesting</data></node>
	<node done="no" type="todo"><data>C4</data></node>
	<node done="no" type="todo"><data>Building capture/repair</data></node>
	<node done="no" type="todo"><data>Unit repair</data></node>
	<node done="no" type="todo"><data>Building infiltration</data></node>
</node>
<node done="no" type="todo"><data>Build queue</data>
	<node done="no" type="todo"><data>Reinspect patch sent into SF for this.</data></node>
	<node done="no" type="todo"><data>(Other stuff, pending on reading through patch)</data></node>
</node>
<node done="no" type="todo"><data>Red Alert support</data>
	<node done="no" type="todo"><data>Fix loading units and structures.</data>
		<node done="yes" type="todo"><data>linenum decoding</data></node>
		<node done="no" type="todo"><data>missing types</data></node>
		<node done="no" type="todo"><data>animations</data></node>
	</node>
	<node done="no" type="todo"><data>Fix interior maps.</data></node>
	<node done="yes" type="todo"><data>Add support for the &quot;OverlayPack&quot; section.</data></node>
	<node done="no" type="todo"><data>Fix hardcoded sidenames in playerpool.cpp.</data>
		<node done="no" type="todo"><data>USSR is to be coloured red in single player.</data></node>
		<node done="no" type="todo"><data>Allies are to be coloured blue in single player.</data></node>
	</node>
	<node done="no" type="todo"><data>Add support for per-map overrides.</data></node>
	<node done="no" type="todo"><data>Do something clever to reduce the duplication between {units,structures}.ini and ra{units,structures}.ini.</data></node>
	<node done="no" type="todo"><data>Add support for multiple types of resource (minerals as well as ore).</data></node>
	<node done="no" type="todo"><data>Support for MPR files.</data></node>
	<node done="no" type="todo"><data>Remove the need to edit conf/freecnc.ini when switching between RA and TD.</data></node>
	<node done="no" type="todo"><data>Extend talkback code to handle different talkbacks for different sides.</data></node>
	<node done="no" type="todo"><data>Add talkback for engineer, tanya, einstien.</data></node>
	<node done="no" type="todo"><data>Add support for the extra two side colours (not sure which ones they are yet).</data></node>
	<node done="no" type="todo"><data>Fix sidebar lacking icons.</data></node>
	<node done="no" type="todo"><data>Fix sidebar icon placement (works fine when updatec.mix is loaded).</data></node>
	<node done="no" type="todo"><data>Gap edge shapes have different indices to the ones in TD, need to abstract the hardcoded values and plug in the right numbers for RA.</data></node>
</node>
</tree>
